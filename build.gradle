plugins {
	id 'java' // Needed for assemble and build
	id 'maven-publish' // Provides publishing and publishToMavenLocal
	id 'com.enonic.defaults' version '2.1.2' // Publishing
	id 'com.enonic.xp.app' version '3.4.0'

	//id 'com.moowork.node' version '1.3.1'
	id 'com.github.node-gradle.node' version '5.0.0'
}


repositories {
	mavenLocal()
	xp.enonicRepo('dev')
	mavenCentral()
}


app {
	name = project.appName
	group = 'com.enonic.app'
	displayName = 'Explorer'
	vendorName = 'Enonic AS'
	vendorUrl = 'http://enonic.com'
	systemVersion = "${xpVersion}"
}


dependencies {
	implementation "com.enonic.xp:core-api:${xpVersion}"
	implementation "com.enonic.xp:portal-api:${xpVersion}"

	//──────────────────────────────────────────────────────────────────────────
	// Core libs (com.enonic.xp)
	//──────────────────────────────────────────────────────────────────────────

	include "com.enonic.xp:lib-admin:${xpVersion}"
	include "com.enonic.xp:lib-auth:${xpVersion}"
	include "com.enonic.xp:lib-cluster:${xpVersion}" // src/main/resources/main.ts:import {isMaster} from '/lib/xp/cluster';
	include "com.enonic.xp:lib-common:${xpVersion}"
	include "com.enonic.xp:lib-context:${xpVersion}" // Needed by lib-explorer
	include "com.enonic.xp:lib-event:${xpVersion}"
	include "com.enonic.xp:lib-i18n:${xpVersion}" // Needed by lib-explorer
	include "com.enonic.xp:lib-io:${xpVersion}"
	include "com.enonic.xp:lib-mail:${xpVersion}" // Needed by lib-explorer
	include "com.enonic.xp:lib-node:${xpVersion}" // Needed by lib-explorer
	include "com.enonic.xp:lib-portal:${xpVersion}"
	include "com.enonic.xp:lib-repo:${xpVersion}"
	include "com.enonic.xp:lib-scheduler:${xpVersion}"
	include "com.enonic.xp:lib-task:${xpVersion}"
	//include "com.enonic.xp:lib-thymeleaf:${xpVersion}"
	//include "com.enonic.xp:lib-vhost:${xpVersion}"
	include "com.enonic.xp:lib-websocket:${xpVersion}"

	//──────────────────────────────────────────────────────────────────────────
	// Other enonic libs (com.enonic.lib)
	//──────────────────────────────────────────────────────────────────────────

	//include 'com.enonic.lib:lib-admin-ui:3.0.0' // Not needed for the XP Menu

	include 'com.enonic.lib:lib-cache:2.2.0'
	include 'com.enonic.lib:lib-graphql:2.1.0'
	//include 'com.enonic.lib:lib-graphql-playground:0.0.1'
	include 'com.enonic.lib:lib-guillotine:6.2.1'
	include 'com.enonic.lib:lib-http-client:3.2.2'
	include 'com.enonic.lib:lib-license:3.1.0'
	include 'com.enonic.lib:lib-router:3.1.0'
	include 'com.enonic.lib:lib-explorer:4.0.0-RC6' // Version must be here or dependabot fails
	include 'com.enonic.lib:lib-util:3.1.1'
	include 'com.enonic.lib:lib-galimatias:1.0.0-B1'

	// WARNING: Do NOT use include files, jar file will be missing dependencies!
}


tasks.withType(Copy) {
  includeEmptyDirs = false
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle wrapper
//──────────────────────────────────────────────────────────────────────────────
wrapper {
	distributionUrl = "${gradleDistributionUrl}"
}


//──────────────────────────────────────────────────────────────────────────────
// Gradle node plugin
//──────────────────────────────────────────────────────────────────────────────
node {
	download = true
	version = "${nodeVersion}"
}


//──────────────────────────────────────────────────────────────────────────────
// Webpack
//──────────────────────────────────────────────────────────────────────────────
sourceSets {
	main {
		resources { // Paths relative to src/main/resources
			exclude 'assets/**/*.svg'
		}
	}
}

task webpack(type:NodeTask) {
	dependsOn yarn_install
	environment = [
		'FORCE_COLOR': 'true',
		'LOG_LEVEL_FROM_GRADLE': gradle.startParameter.logLevel.toString(),
		'NODE_ENV': project.hasProperty('dev') || project.hasProperty('development') ? 'development' : 'production'
	]
	args = [
		'--color'
	]
	inputs.dir 'src/main/resources'
	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
	script = file('node_modules/webpack-cli/bin/cli.js')
}
jar.dependsOn webpack

// task swc(type:YarnTask) {
// 	dependsOn webpack
// 	mustRunAfter webpack
// 	args = ['swc']
// 	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
// }

task tsup(
	dependsOn: yarn_install,
	type: YarnTask
) {
	args = ['build:tsup']
	environment = [
		'FORCE_COLOR': 'true',
		'LOG_LEVEL_FROM_GRADLE': gradle.startParameter.logLevel.toString(),
		'NODE_ENV': project.hasProperty('dev') || project.hasProperty('development') ? 'development' : 'production'
	]
	inputs.dir 'src/main/resources'
	outputs.dir './build/resources/main' // processResources will delete the directory if this is not present
}
jar.dependsOn tsup


task watch(type:NodeTask) {
	script = file('node_modules/webpack-cli/bin/cli.js')
	args = [
		'--color',
		'--watch'
	]
}


processResources {
	exclude '**/.gitkeep'

	// We want these:
	// * collectors.json
	// * documentTypes.json
	// But not these:
	exclude 'tsconfig.json'
	exclude 'assets/tsconfig.json'

	// Let webpack handle these (rather than gradle)
	exclude '**/*.css'
	exclude '**/*.es'
	exclude '**/*.js'
	exclude '**/*.jsx'
	exclude '**/*.less'
	exclude '**/*.sass'
	exclude '**/*.scss'
	exclude '**/*.styl'
	exclude '**/*.ts'
}
